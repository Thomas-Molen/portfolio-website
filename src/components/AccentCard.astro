---
interface Props {
  title: string;
  info?: string;
  accent?: string;
  icon: string;
  iconHref?: string;
}

const { title, info, accent = "white", icon, iconHref } = Astro.props;

const iconStyle = "icon bi bi-" + icon;

const infoSpanAttributes = {
  ...(info && {
    "style": "cursor:help",
    "data-tooltip-placement": "top",
    "title": info,
  }),
};
---

<div class="card-container card-shadow">
  <div class="px-4 py-3 h-100 row justify-content-between">
    <div class="col">
      <p class="title">
        <span {...infoSpanAttributes}>
          {title}
          {
            info && (
              <sup>
                <i class="info">i</i>
              </sup>
            )
          }
        </span>
      </p>
      <slot />
    </div>
    <div class="col-auto d-flex justify-content-end align-items-center">
      {
        iconHref === undefined ? (
          <i class={iconStyle} />
        ) : (
          <a href={iconHref} target="_blank">
            <i class:list={["link", iconStyle]} />
          </a>
        )
      }
    </div>
  </div>
</div>

<style define:vars={{ accent }}>
  .title {
    font-size: 1rem;
    font-weight: 500;
    margin-bottom: 0.5rem;
    color: var(--text-color);
  }
  .card-container {
    height: 100%;
    border: 1px solid var(--card-color);
    border-radius: 5px;
    border-left-color: var(--accent);
    border-left-width: 0.25rem;

    background-color: var(--card-color);
  }
  .card-container .title {
    color: var(--accent);
    text-transform: uppercase;
  }
  .card-container .icon {
    color: lightgrey;
    font-size: 2.5rem;
  }
  .info {
    color: var(--text-color);
    text-transform: none;
  }
  .icon.link:hover {
    color: var(--link-color);
  }
</style>
